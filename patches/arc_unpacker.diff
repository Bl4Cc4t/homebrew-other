diff --git a/CMakeLists.txt b/CMakeLists.txt
index b0eabe7..94db283 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -109,10 +109,12 @@ endif()
 if(WIN32)
     list(REMOVE_ITEM au_sources "${CMAKE_SOURCE_DIR}/src/logger_ansi.cc")
     list(REMOVE_ITEM au_sources "${CMAKE_SOURCE_DIR}/src/logger_dummy.cc")
-else(CYGWIN OR UNIX)
+endif()
+if(CYGWIN OR UNIX)
     list(REMOVE_ITEM au_sources "${CMAKE_SOURCE_DIR}/src/logger_win.cc")
     list(REMOVE_ITEM au_sources "${CMAKE_SOURCE_DIR}/src/logger_dummy.cc")
-else()
+endif()
+if(APPLE)
     list(REMOVE_ITEM au_sources "${CMAKE_SOURCE_DIR}/src/logger_win.cc")
     list(REMOVE_ITEM au_sources "${CMAKE_SOURCE_DIR}/src/logger_ansi.cc")
 endif()
 
diff --git a/src/algo/call_stack_keeper.cc b/src/algo/call_stack_keeper.cc
index e9747d1..1a18aef 100644
--- a/src/algo/call_stack_keeper.cc
+++ b/src/algo/call_stack_keeper.cc
@@ -1,5 +1,6 @@
 #include "algo/call_stack_keeper.h"
 #include "err.h"
+#include <string>

  using namespace au::algo;
  
diff --git a/src/dec/jpeg/jpeg_image_decoder.cc b/src/dec/jpeg/jpeg_image_decoder.cc
index bb249e7..0aa4622 100644
--- a/src/dec/jpeg/jpeg_image_decoder.cc
+++ b/src/dec/jpeg/jpeg_image_decoder.cc
@@ -23,7 +23,7 @@ res::Image JpegImageDecoder::decode_impl(
     info.err = jpeg_std_error(&err);
     jpeg_create_decompress(&info);
     jpeg_mem_src(&info, source.get<u8>(), source.size());
-    jpeg_read_header(&info, true);
+    jpeg_read_header(&info, (boolean)true);
     jpeg_start_decompress(&info);
 
     const auto width = info.output_width;

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 94db283..bb0b355 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -38,6 +38,8 @@ find_package(OpenSSL REQUIRED)
 include_directories(${OPENSSL_INCLUDE_DIR})
 link_directories(${OPENSSL_LIBRARY_DIRS})
 
+find_library(LIBSTDCXX NAMES stdc++)
+
 # --------------------
 # Global build options
 # --------------------
@@ -73,6 +75,8 @@ endif()
 
 add_definitions(-D_FILE_OFFSET_BITS=64) # 64-bit off_t
 
+add_compile_options(-stdlib=libstdc++)
+
 # ------------
 # Source files
 # ------------
@@ -172,7 +176,7 @@ endif()
 add_library(libau OBJECT ${au_sources} ${au_headers})
 
 add_executable(arc_unpacker "${CMAKE_SOURCE_DIR}/src/main.cc" $<TARGET_OBJECTS:libau>)
-target_link_libraries(arc_unpacker ${unicode} ${iconv} ${Boost_LIBRARIES} ${ZLIB_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES} ${OPENSSL_LIBRARIES})
+target_link_libraries(arc_unpacker ${LIBSTDCXX} ${unicode} ${iconv} ${Boost_LIBRARIES} ${ZLIB_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES} ${OPENSSL_LIBRARIES})
 
 add_executable(run_tests ${test_sources} ${test_headers} "${CMAKE_SOURCE_DIR}/tests/main.cc" $<TARGET_OBJECTS:libau>)
 target_link_libraries(run_tests ${iconv} ${Boost_LIBRARIES} ${ZLIB_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES} ${OPENSSL_LIBRARIES})
